version: '3.4'

services:
  backend:
    build:
      context: Backend/
      dockerfile: Dockerfile
    restart: unless-stopped
    labels:
      traefik.docker.network: "proxy_net"
      traefik.backend.healthcheck.port: "8000"

      traefik.api.port: "8000"
      traefik.api.frontend.rule: "Host:127.0.0.1;PathPrefix:/api"
      traefik.api.frontend.passHostHeader: true
      traefik.api.frontend.entryPoints: "http"

      traefik.admin.port: "8000"
      traefik.admin.frontend.rule: "Host:127.0.0.1;PathPrefix:/admin"
      traefik.admin.frontend.entryPoints: "http"

      traefik.static.frontend.rule: "Host: 127.0.0.1;PathPrefix:/static"
      traefik.static.port: "8081"
      traefik.static.frontend.entryPoints: "http"

      traefik.media.frontend.rule: "Host: 127.0.0.1;PathPrefix:/media"
      traefik.media.port: "8081"
      traefik.media.frontend.entryPoints: "http"
    env_file:
      - .env
    volumes:
      - backend_media:/home/taiga/taiga-back/media
      - backend_static:/home/taiga/taiga-back/static
    depends_on:
      - postgres
      - rabbit
      - redis
    networks:
      taiga_net:
        aliases:
          - localhost
          - backend
      proxy_net:

  frontend:
    build:
      context: Frontend/
      dockerfile: Dockerfile
    restart: unless-stopped
    labels:
      traefik.docker.network: "proxy_net"
      traefik.backend.healthcheck.port: "8070"
      traefik.port: "8070"
      traefik.frontend.passHostHeader: true
      traefik.frontend.rule: "Host:127.0.0.1"
      traefik.frontend.entryPoints: "http"
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      taiga_net:
        aliases:
          - frontend
      proxy_net:

  events:
    build:
      context: Events/
      dockerfile: Dockerfile
    restart: unless-stopped
    labels:
      traefik.docker.network: "proxy_net"
      traefik.backend.healthcheck.port: "8888"
      traefik.events.frontend.rule: "Host: 127.0.0.1;PathPrefix:/events"
      traefik.events.frontend.entryPoints: "http"
      traefik.events.frontend.passHostHeader: true
      traefik.events.port: "8888"
    env_file:
      - .env
    depends_on:
      - rabbit
      - redis
      - backend
    networks:
      taiga_net:
        aliases:
          - events
      proxy_net:

  postgres:
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - taiga_net
      - proxy_net

  rabbit:
    image: rabbitmq:latest
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - taiga_net
      - proxy_net

  redis:
    image: redis:latest
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - taiga_net
      - proxy_net

  proxy:
    image: traefik
    restart: unless-stopped
    labels:
      traefik.port: 8080
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy_net
    command: --api --docker --docker.domain=localhost

volumes:
  backend_media:
  backend_static:

networks:
  taiga_net:
    driver: bridge
  proxy_net:
    driver: bridge